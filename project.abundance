{
    "atomType": "Molecule",
    "name": "Radial-Pattern",
    "x": 0,
    "y": 0,
    "uniqueID": "ab6fe8a2-4661-41e4-bc3f-45058cc58bdc",
    "ioValues": [],
    "description": "Molecules provide an organizational structure to contain atoms. Double click on a molecule to enter it. Use the up arrow in the upper right hand corner of the screen to go up one level.",
    "topLevel": true,
    "allAtoms": [
        {
            "atomType": "Output",
            "name": "Output",
            "x": 0.98,
            "y": 0.5,
            "uniqueID": "0f86ee69-7fbf-4fce-b574-72df05871821",
            "ioValues": [],
            "description": "Connect geometry here to make it available in the next level up. "
        },
        {
            "atomType": "Circle",
            "name": "Circle",
            "x": 0.163855421686747,
            "y": 0.4879518072289156,
            "uniqueID": "be507d1b-e163-447a-be4c-59db20cd0098",
            "ioValues": [
                {
                    "name": "diameter",
                    "ioValue": 10
                }
            ],
            "description": "Creates a new circle."
        },
        {
            "atomType": "Code",
            "name": "Code",
            "x": 0.4465863453815261,
            "y": 0.5030120481927711,
            "uniqueID": "5ebf8b2e-da3c-47f0-8b88-6f2f84729ac5",
            "ioValues": [
                {
                    "name": "Shape",
                    "ioValue": "be507d1b-e163-447a-be4c-59db20cd0098"
                },
                {
                    "name": "Number",
                    "ioValue": 10
                },
                {
                    "name": "distX",
                    "ioValue": 10
                },
                {
                    "name": "distY",
                    "ioValue": 10
                },
                {
                    "name": "distZ",
                    "ioValue": 10
                }
            ],
            "description": "Defines a Replicad code block.",
            "codeVersion": 1,
            "code": "//Inputs:[Shape, Number, distX, distY, distZ];\n\n\nlet shapesArray = [];\nfor (let i = 0; i < Number; i++) {\n    let rotatedShape = await Move(Shape, distX * i, distY * i,distZ * i);\n    shapesArray.push(rotatedShape);\n}\n\nlet assembledShape = await Assembly(shapesArray)\n\nreturn assembledShape;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /**\n    To Use the Code Atom, enter your inputs to the input list a.e Inputs:[shape, height]\n    If your input is connected to another atom with a replicad geometry you can access its geometry by looking up its ID in your library. a.e library[Input1].geometry[0] \n    Use any replicad available methods to modify your geometry. Learn more about all of the available methods at \n    https://replicad.xyz/docs/introapp/UserGuide.html \n    Return a replicad object that includes geometry, color, tags and plane. \n\n\n    Example Code Atom:\n\n      Inputs:[shape, x];\n\n      let finalShape = library[shape].geometry[0].clone.translate[x,0,0]\n\n      return {geometry: finalShape, color: library[shape].color, plane: library[shape].plane, tags: library[shape].tags }\n\n      - See more examples at _______ \n\n\n    */\n"
        }
    ],
    "allConnectors": [
        {
            "ap1Name": "geometry",
            "ap2Name": "Shape",
            "ap2Primary": false,
            "ap1ID": "be507d1b-e163-447a-be4c-59db20cd0098",
            "ap2ID": "5ebf8b2e-da3c-47f0-8b88-6f2f84729ac5"
        }
    ],
    "unitsKey": "MM",
    "fileTypeVersion": 1,
    "compiledBom": {},
    "filetypeVersion": 1
}